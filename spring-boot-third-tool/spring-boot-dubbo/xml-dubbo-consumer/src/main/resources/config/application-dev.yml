server:
  port: 9092
  servlet:
    context-path: /

# -------------------- 配置变量 BEGIN --------------------
# -------------------- SQL --------------------
this.druid.db:
  username: root
  password: 123456
  url: jdbc:mysql://localhost:3306/zhang?useSSL=false&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2B8
# -------------------- dubbo --------------------
this.dubbo:
  application.name: project-dubbo-com.consumer
  # zk.server: zookeeper://55.xxx.47.82:2181,55.xxx.47.196:2181,55.xxx.48.xx:2181
  zk.server1: zookeeper://55.x.47.82:2181
  zk.server2: zookeeper://55.x.47.196:2181
  zk.server3: zookeeper://55.x.48.139:2181
# -------------------- 配置变量 END --------------------


swagger2:
  basepackage: com.com.consumer.com.multi.controller

spring:
  datasource:
    name: mySqlName
    # 配置第三方数据源
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: ${this.druid.db.url}
      username: "${this.druid.db.username}"
      password: "${this.druid.db.password}"
      # 配置初始值
      initial-size: "${global.druid.db.initial-size}"
      min-idle: "${global.druid.db.min-idle}"
      max-active: "${global.druid.db.max-active}"
      # 获取连接等待超时时间
      max-wait: "${global.druid.db.max-wait}"
      # 监控关闭空闲连接时间间隔
      time-between-eviction-runs-millis: "${global.druid.db.time-between-eviction-runs-millis}"
      # 每个连接池最小的生命周期
      min-evictable-idle-time-millis: "${global.druid.db.min-evictable-idle-time-millis}"
      validation-query: "${global.druid.db.validation-query}"
      test-while-idle: "${global.druid.db.test-while-idle}"
      test-on-borrow: "${global.druid.db.test-on-borrow}"
      test-on-return: "${global.druid.db.test-on-return}"
      remove-abandoned: "${global.druid.db.remove-abandoned}"
      remove-abandoned-timeout: "${global.druid.db.remove-abandoned-timeout}"
      log-abandoned: "${global.druid.db.log-abandoned}"
  # ------------------------------------数据库基本配置 END ------------------------------------

