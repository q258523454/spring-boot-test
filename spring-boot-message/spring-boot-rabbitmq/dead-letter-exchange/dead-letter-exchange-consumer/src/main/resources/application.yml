spring:
  datasource:
    url: jdbc:mysql://localhost:3306/zhang?useSSL=false&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2B8
    username: root
    password: 123456
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver

  rabbitmq:
    host: 55.10.24.36
    port: 5672
    username: 9e888dfc-2099-4963-90f9-22a63f00bba7
    password: 770dd4d7-cd09-4ec7-8099-39660bed476e
    virtual-host: 5590ccaa-6892-4fe3-9639-59091501c66e
    # 发送确认
    publisher-confirms: true
    # 路由失败回调
    publisher-returns: true
    connection-timeout: 15000
    template:
      # 必须设置成true 消息路由失败通知监听者，而不是将消息丢弃
      mandatory: true
    listener:
      simple:
        # prefetch默认值以前是1，这可能会导致高效使用者的利用率不足。
        # 从spring-amqp 2.0版开始，默认的prefetch值是250，这将使消费者在大多数常见场景中保持忙碌，从而提高吞吐量。
        # 不过在有些情况下，尤其是处理速度比较慢的大消息，消息可能在内存中大量堆积，消耗大量内存；
        # 对于一些严格要求顺序的消息，prefetch的值应当设置为1。
        # 对于低容量消息和多个消费者的情况,希望在多个使用者之间实现更均匀的消息分布，建议在手动ack下并设置prefetch=1。
        prefetch: 2 # 限流作用,每个消费线程从RabbitMQ预获取的消息数量,即一个消费者最多可处理的nack消息数量, 如果有事务的话，必须>=transaction数量.
        default-requeue-rejected: false # 默认true:监听器抛出异常而拒绝的消息是否被重新放回队列。 如果手动basicNack时这些参数就失效了
        # concurrency:默认消费者线程并发数,即@RabbitListener开启几个线程去处理数据,如果代码配置了,会覆盖这里的concurrency
        # 每个@RabbitListener开启几个线程去处理数据,即多少个channel
        concurrency: 5
        max-concurrency: 10 # 每个队列最大的消费者数量
        # auto:自动应答(默认), none:不作任何应答 , manual:需要在代码中手动ACK,
        acknowledge-mode: manual
rmq:
  # 队列定义
  queue:
    live: queue-live # 正常业务队列
    dead: queue-dead # 死信队列
    prefetch: queue-prefetch # 死信队列
server:
  port: 8081