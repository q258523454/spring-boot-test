<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ack.common.dao.BrokerMessageLogMapper">
    <resultMap id="BaseResultMap" type="com.ack.common.entity.BrokerMessageLog">
        <!--@mbg.generated-->
        <!--@Table broker_message_log-->
        <id column="message_id" jdbcType="VARCHAR" property="messageId"/>
        <result column="message" jdbcType="VARCHAR" property="message"/>
        <result column="try_count" jdbcType="INTEGER" property="tryCount"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="next_retry" jdbcType="TIMESTAMP" property="nextRetry"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        message_id, message, try_count, `status`, next_retry, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from broker_message_log
        where message_id = #{messageId,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--@mbg.generated-->
        delete from broker_message_log
        where message_id = #{messageId,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="com.ack.common.entity.BrokerMessageLog">
        <!--@mbg.generated-->
        insert into broker_message_log (message_id, message, try_count,
        `status`, next_retry, create_time,
        update_time)
        values (#{messageId,jdbcType=VARCHAR}, #{message,jdbcType=VARCHAR}, #{tryCount,jdbcType=INTEGER},
        #{status,jdbcType=VARCHAR}, #{nextRetry,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertSelective" parameterType="com.ack.common.entity.BrokerMessageLog">
        <!--@mbg.generated-->
        insert into broker_message_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="messageId != null">
                message_id,
            </if>
            <if test="message != null">
                message,
            </if>
            <if test="tryCount != null">
                try_count,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="nextRetry != null">
                next_retry,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="messageId != null">
                #{messageId,jdbcType=VARCHAR},
            </if>
            <if test="message != null">
                #{message,jdbcType=VARCHAR},
            </if>
            <if test="tryCount != null">
                #{tryCount,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="nextRetry != null">
                #{nextRetry,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.ack.common.entity.BrokerMessageLog">
        <!--@mbg.generated-->
        update broker_message_log
        <set>
            <if test="message != null">
                message = #{message,jdbcType=VARCHAR},
            </if>
            <if test="tryCount != null">
                try_count = #{tryCount,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=VARCHAR},
            </if>
            <if test="nextRetry != null">
                next_retry = #{nextRetry,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where message_id = #{messageId,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.ack.common.entity.BrokerMessageLog">
        <!--@mbg.generated-->
        update broker_message_log
        set message = #{message,jdbcType=VARCHAR},
        try_count = #{tryCount,jdbcType=INTEGER},
        `status` = #{status,jdbcType=VARCHAR},
        next_retry = #{nextRetry,jdbcType=TIMESTAMP},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where message_id = #{messageId,jdbcType=VARCHAR}
    </update>

    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update broker_message_log
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="message = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when message_id = #{item.messageId,jdbcType=VARCHAR} then #{item.message,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="try_count = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when message_id = #{item.messageId,jdbcType=VARCHAR} then #{item.tryCount,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="`status` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when message_id = #{item.messageId,jdbcType=VARCHAR} then #{item.status,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="next_retry = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when message_id = #{item.messageId,jdbcType=VARCHAR} then #{item.nextRetry,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when message_id = #{item.messageId,jdbcType=VARCHAR} then #{item.createTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when message_id = #{item.messageId,jdbcType=VARCHAR} then #{item.updateTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
        </trim>
        where message_id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.messageId,jdbcType=VARCHAR}
        </foreach>
    </update>

    <select id="selectByStatusAndNextRetry" resultType="com.ack.common.entity.BrokerMessageLog">
        select
        <include refid="Base_Column_List"/>
        from
        broker_message_log
        where status = #{status}
        and next_retry &lt; sysdate()
    </select>

    <select id="selectAll" resultType="com.ack.common.entity.BrokerMessageLog">
        select
        <include refid="Base_Column_List"/>
        from
        broker_message_log
    </select>
    <select id="selectByEntity" resultType="com.ack.common.entity.BrokerMessageLog">
        select *
        from broker_message_log
    </select>


</mapper>