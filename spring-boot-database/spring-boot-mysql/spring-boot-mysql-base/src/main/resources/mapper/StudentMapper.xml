<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mysql.base.dao.StudentMapper">
    <resultMap id="BaseResultMap" type="com.mysql.base.entity.Student">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        name,
        age
    </sql>

    <resultMap id="MyResult" type="com.mysql.base.entity.MyResult">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="name2" jdbcType="VARCHAR" property="name2"/>
    </resultMap>


    <select id="selectByPrimaryKey" parameterType="Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from student
        where id = #{id,jdbcType=INTEGER}
    </select>

    <insert id="insert" parameterType="com.mysql.base.entity.Student" useGeneratedKeys="true" keyColumn="id"
            keyProperty="id">
        insert into student(id,
                            name,
                            age)
        values (#{id,jdbcType=INTEGER},
                #{name,jdbcType=VARCHAR},
                #{age,jdbcType=INTEGER})
    </insert>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM student
    </select>

    <select id="selectMaxId" resultType="integer">
        SELECT
            MAX(id)
        FROM student
    </select>

    <!--auto generated by MybatisCodeHelper on 2020-04-26-->
    <update id="updateByName">
        update student
        <set>
            <if test="updated.id != null">
                id = #{updated.id,jdbcType=INTEGER},
            </if>
            <if test="updated.name != null">
                name = #{updated.name,jdbcType=VARCHAR},
            </if>
            <if test="updated.age != null">
                age = #{updated.age,jdbcType=INTEGER}
            </if>
        </set>
        where `name` = #{name,jdbcType=VARCHAR}
    </update>


    <select id="selectAllReturnMap" resultType="java.util.Map">
        SELECT
            id,
            name
        FROM student
    </select>

    <select id="selectAllReturnSelfObject" resultMap="MyResult">
        SELECT
            t1.id,
            t1.name,
            t2.name2
        FROM student t1
        LEFT JOIN student2 t2 on t1.id = t2.id
    </select>

    <select id="selectWhereTest" resultMap="BaseResultMap">
        SELECT
            id,
            name,
            age
        FROM student
        <where>
            age &lt;= #{maxAge}
            <if test="serachName != null and serachName != ''">
                and name like CONCAT('%', #{serachName,jdbcType=VARCHAR}, '%')
            </if>
            <if test="idList != null and idList.size() > 0">
                and id in
                <foreach collection="idList" item="item" open="(" close=")" separator=",">
                    #{item,jdbcType=VARCHAR}
                </foreach>
            </if>
        </where>
    </select>

    <select id="createStudentTable" >
        CREATE TABLE if not exists `student`
        (
            `id`   int NOT NULL AUTO_INCREMENT COMMENT 'id',
            `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '姓名',
            `age`  int                                                           DEFAULT NULL COMMENT '年龄',
            PRIMARY KEY (`id`)
        )
        ENGINE = InnoDB AUTO_INCREMENT = 1 DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci;
    </select>

    <delete id="deleteStudentTable">
        DROP TABLE student;
    </delete>

    <update id="addStudentTableCol">
        ALTER TABLE student ADD id2 varchar(100) NULL;
    </update>

    <select id="delStudentTableCol">
        ALTER TABLE student drop column id2;
    </select>

</mapper>