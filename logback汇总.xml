<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- ==================== 自定义配置项 BEGIN ==================== -->
    <!-- 定义变量,引用${var} -->
    <!-- 项目名称, 用于日志打印前缀 -->
    <property name="PROJECT_NAME" value="app"/>
    <!-- 日志文件路径 -->
    <property name="LOG_PATH" value="logs"/>
    <!-- console日志文件名 -->
    <property name="CONSOLE_FILE" value="file"/>
    <!-- error日志文件名 -->
    <property name="ERROR_FILE" value="error"/>
    <!-- 指定扫描包-日志文件 -->
    <property name="CERTAIN_PACKAGE" value="self-package"/>
    <!-- ==================== 自定义配置项 END ==================== -->

    <!-- Spring default values -->
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

    <!-- CONSOLE默认配置, %-40.40logger{39}: 中logger等价于%C(日志包.类), 符号'-'表示左对齐, 显示长度最小/大宽度40-->
    <!-- 语法: %clr([%变量名]){颜色} -->
    <property name="CONSOLE_LOG_PATTERN_DEFAULT"
              value="${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} line:%L %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
    <property name="CONSOLE_LOG_PATTERN"
              value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%C){cyan}.%clr(%M){cyan}%clr([%L]){cyan} : %m%n%wEx"/>

    <!-- 控制台 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!-- console file 文件输出 -->
    <appender name="CONSOLE_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_PATH}/${CONSOLE_FILE}.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${CONSOLE_FILE}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>100</maxHistory>
            <totalSizeCap>10GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss,SSS} [%thread] %-5level %logger{50} -[%F:%L]- %msg%n</pattern>
        </encoder>
    </appender>

    <!-- error文件输出 -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 路径 -->
        <File>${LOG_PATH}/${ERROR_FILE}.log</File>
        <!-- 日志等级 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <!-- 滚动策略: 按天生成 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${ERROR_FILE}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 按大小切分日志, 超过指定大小后文件名中的 %i 会自动加1 -->
            <maxFileSize>100MB</maxFileSize>
            <!-- 最多只保留最近100天日志 -->
            <maxHistory>100</maxHistory>
            <!-- 日志文件大小上限: 超过该值会删除旧日志 -->
            <totalSizeCap>10GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss,SSS} [%thread] %-5level %logger{50} -[%F:%L]- %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 自定义log文件 -->
    <appender name="CERTAIN_PACKAGE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 路径 -->
        <File>${LOG_PATH}/${CERTAIN_PACKAGE}.log</File>
        <!-- 滚动策略: 按天生成 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${CERTAIN_PACKAGE}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 按大小切分日志, 超过指定大小后文件名中的 %i 会自动加1 -->
            <maxFileSize>100MB</maxFileSize>
            <!-- 最多只保留最近100天日志 -->
            <maxHistory>100</maxHistory>
            <!-- 日志文件大小上限: 超过该值会删除旧日志 -->
            <totalSizeCap>10GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss,SSS} [%thread] %-5level %logger{50} -[%F:%L]- %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 定义日志等级: 将输入到appender, appender自身再过滤 -->
    <!-- DEBUG < INFO < WARN < ERROR < FATAL -->
    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="CONSOLE_FILE"/>
        <appender-ref ref="ERROR_FILE"/>
    </root>


    <!-- 多环境配置 application-{dev} 激活配置, 会覆盖外面的 root level -->
    <springProfile name="dev">

        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="CONSOLE_FILE"/>
            <appender-ref ref="ERROR_FILE"/>
        </root>
        <!-- additivity (默认true):是否向父级logger传递打印信息, true：向<root>中的<appender>也同时打印, false: 只在当前<appender>打印-->
        <!-- mybatis打印的时候,设置debug模式 -->
        <logger name="com.logback.mybatis" level="debug" additivity="true">
            <appender-ref ref="CERTAIN_PACKAGE"/>
        </logger>
    </springProfile>

</configuration>